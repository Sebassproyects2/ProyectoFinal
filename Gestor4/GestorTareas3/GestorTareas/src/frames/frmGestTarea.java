package frames;

import GProyectos.GestProyecto;
import GProyectos.GestTarea;
import gestor.controlador.Tarea;
import gestor.controlador.Usuario;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmGestTarea extends javax.swing.JFrame {

    private Usuario usuario;

    /**
     * Creates new form frmGestTarea
     */
    public frmGestTarea(Usuario usuario) {
        initComponents();
        this.usuario = usuario;
        this.setLocationRelativeTo(null);
        cargarListaUsuarios();
        cargarListaProyectos();
        cargarDatos();

    }

    public void cargarListaUsuarios() {
        DefaultComboBoxModel<String> modelo = (DefaultComboBoxModel<String>) cmbResponsable.getModel();
        modelo.addElement("Seleccione un responsable:");
        Usuario listUsuarios = new Usuario();
        for (String x : listUsuarios.todosUsuario()) {
            modelo.addElement(x);
        }
        cmbResponsable.setModel(modelo);
    }

    public void cargarListaProyectos() {
        DefaultComboBoxModel<String> modelo = (DefaultComboBoxModel<String>) cmbProyecto.getModel();
        modelo.addElement("Seleccione un proyecto:");
        GestProyecto listProyecto = new GestProyecto();
        for (String x : listProyecto.todosNombreProyecto()) {
            modelo.addElement(x);
        }
        cmbProyecto.setModel(modelo);
    }

    public void cargarDatos() {
        String nombre = this.usuario.getNombre() + " ("
                + this.usuario.getEmail() + ")";

        DefaultTableModel model = (DefaultTableModel) jtTarea.getModel();
        model.setNumRows(0);

        GestTarea dTarea = new GestTarea();
        ArrayList<Tarea> miListaTarea = dTarea.buscarTareaResponsable(nombre);

        if (!miListaTarea.isEmpty()) {
            String datos[] = new String[8];
            for (Tarea tarea : miListaTarea) {
                datos[0] = tarea.getIdTarea();
                datos[1] = tarea.getNombreProyecto();
                datos[2] = tarea.getNombreTarea();
                datos[3] = tarea.getResponsableTarea();
                datos[4] = String.valueOf(tarea.getFechaDeVencimiento());
                datos[5] = tarea.getPrioridad();
                datos[6] = tarea.getFinalizadaTarea() ? "Sí" : "No";
                datos[7] = tarea.getComentario();
                model.addRow(datos);
            }
        }
        jtTarea.setModel(model);
    }

    public void limpiar() {
        txtIdTarea.setText("");
        cmbProyecto.setSelectedIndex(0);
        txtNombreTarea.setText("");
        cmbResponsable.setSelectedIndex(0);
        ftxtFechaVencimiento.setText("");;
        cmbPrioridad.setSelectedIndex(-1);
        cmbFinalizada.setSelectedIndex(-1);
        txtIdTarea.requestFocus();
    }

    public boolean finalizada() {
        if (cmbFinalizada.getSelectedIndex() == 1) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdTarea = new javax.swing.JTextField();
        txtNombreTarea = new javax.swing.JTextField();
        cmbResponsable = new javax.swing.JComboBox<>();
        ftxtFechaVencimiento = new javax.swing.JFormattedTextField();
        btnAgregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        cmbFinalizada = new javax.swing.JComboBox<>();
        btnComentario = new javax.swing.JButton();
        cmbPrioridad = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cmbProyecto = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTarea = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        btnListaProyectos = new javax.swing.JButton();
        btnMisProyectos = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Tareas");
        setBackground(new java.awt.Color(204, 204, 0));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Tarea"));

        jLabel5.setText("Id Tarea");

        jLabel1.setText("Nombre Proyecto");

        jLabel2.setText("Persona Responsable");

        jLabel3.setText("Fecha de Vencimiento");

        jLabel4.setText("Prioridad");

        ftxtFechaVencimiento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        ftxtFechaVencimiento.setToolTipText("Formato: yyyy-mm-dd");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/agregar-archivo.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Formato de fechas: yyyy-mm-dd");

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jLabel7.setText("¿Tarea Finalizada?");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/buscar.png"))); // NOI18N
        btnBuscar.setText("Búsqueda Avanzada");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        cmbFinalizada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Sí" }));
        cmbFinalizada.setSelectedIndex(-1);
        cmbFinalizada.setToolTipText("");

        btnComentario.setText("<html>Agregar/Editar<br>Comentarios</html>");
        btnComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComentarioActionPerformed(evt);
            }
        });

        cmbPrioridad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Baja", "Media", "Alta" }));
        cmbPrioridad.setSelectedIndex(-1);

        jLabel8.setText("Nombre Tarea");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ftxtFechaVencimiento)
                            .addComponent(cmbFinalizada, 0, 380, Short.MAX_VALUE)
                            .addComponent(cmbPrioridad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnComentario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdTarea)
                            .addComponent(txtNombreTarea)
                            .addComponent(cmbResponsable, 0, 380, Short.MAX_VALUE)
                            .addComponent(cmbProyecto, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtIdTarea, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(cmbProyecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtNombreTarea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar)
                    .addComponent(cmbResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(5, 5, 5)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cmbFinalizada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtTarea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Tarea", "Proyecto", "Nombre Tarea", "Responsable", "Fecha Vencimiento", "Prioridad", "¿Finalizada?", "Comentarios"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTarea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTareaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtTarea);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnListaProyectos.setText("Ver todas las tareas");
        btnListaProyectos.setToolTipText("Muestra la lista de todas las tareas en la base de datos.");
        btnListaProyectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaProyectosActionPerformed(evt);
            }
        });

        btnMisProyectos.setText("Ver solo mis tareas");
        btnMisProyectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMisProyectosActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btnSalir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                        .addComponent(btnListaProyectos)
                        .addGap(68, 68, 68)
                        .addComponent(btnMisProyectos)
                        .addGap(68, 68, 68)
                        .addComponent(btnVolver)
                        .addGap(67, 67, 67))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListaProyectos)
                    .addComponent(btnMisProyectos)
                    .addComponent(btnVolver)
                    .addComponent(btnSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String comentario = "";
        if (txtIdTarea.getText().isEmpty()
                || cmbProyecto.getSelectedIndex() == 0
                || txtNombreTarea.getText().isEmpty()
                || cmbResponsable.getSelectedIndex() == 0
                || ftxtFechaVencimiento.getText().isEmpty()
                || cmbPrioridad.getSelectedIndex() == 0
                || cmbFinalizada.getSelectedIndex() == -1) { // Verifica que se haya seleccionado una opción

            JOptionPane.showMessageDialog(this, "Rellene todos los espacios para agregar el proyecto",
                    "Espacios vacíos", JOptionPane.WARNING_MESSAGE);
            return;

        } else {
            GestTarea gestTarea = new GestTarea();
            Tarea p = new Tarea(txtIdTarea.getText(),
                    txtNombreTarea.getText(),
                    cmbResponsable.getSelectedItem().toString(),
                    LocalDate.parse(ftxtFechaVencimiento.getText()),
                    cmbPrioridad.getSelectedItem().toString(),
                    finalizada(),
                    comentario,
                    cmbProyecto.getSelectedItem().toString());
            gestTarea.insertarTarea(p);
            cargarDatos();
            limpiar();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        GestTarea gestTarea = new GestTarea();
        Tarea p = new Tarea(txtIdTarea.getText(),
                txtNombreTarea.getText(),
                cmbResponsable.getSelectedItem().toString(),
                LocalDate.parse(ftxtFechaVencimiento.getText()),
                cmbPrioridad.getSelectedItem().toString(),
                finalizada(),
                cmbProyecto.getSelectedItem().toString());
        gestTarea.eliminarTarea(p);

        cargarDatos();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String comentario = "";
        GestTarea gestTarea = new GestTarea();

        //Me traigo el comentario desde la BD
        Tarea tComent = (gestTarea.encontrarTareaId(txtIdTarea.getText()));
        if (tComent.getComentario() != null) {
            comentario = tComent.getComentario();
        }

        Tarea p = new Tarea(txtIdTarea.getText(),
                txtNombreTarea.getText(),
                cmbResponsable.getSelectedItem().toString(),
                LocalDate.parse(ftxtFechaVencimiento.getText()),
                cmbPrioridad.getSelectedItem().toString(),
                finalizada(),
                comentario,
                cmbProyecto.getSelectedItem().toString());
        gestTarea.modificarTarea(p);
        cargarDatos();
        limpiar();

        cargarDatos();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtTarea.getModel();
        model.setNumRows(0);

        GestTarea dTarea = new GestTarea();
        ArrayList<Tarea> miListaTarea = new ArrayList<>();

        //Creo un OptionDialog para que el usuario seleccione el tipo de búsqueda
        String[] opciones = {"Id", "Nombre", "Proyecto", "Persona Responsable", "Fecha de Vencimiento",
            "Prioridad", "Estado de Finalización"};
        this.toBack();
        int x = JOptionPane.showOptionDialog(null, "Seleccione el filtro de búsqueda que desear realizar:",
                "Búsqueda Avanzada",
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opciones, opciones[0]);

        //Hago un switch para darle el valor a la lista dependiendo del tipo de búsqueda seleccionado
        //así le doy el valor correcto dependiendo del método asignado
        switch (x) {
            case 0:
                miListaTarea = dTarea.buscarTareaId(txtIdTarea.getText());
                break;
            case 1:
                miListaTarea = dTarea.buscarTareaNombre(txtNombreTarea.getText());
                break;
            case 2:
                miListaTarea = dTarea.buscarTareaNombreProyecto(cmbProyecto.getSelectedItem().toString());
                break;
            case 3:
                miListaTarea = dTarea.buscarTareaResponsable(cmbResponsable.getSelectedItem().toString());
                break;
            case 4:
                miListaTarea = dTarea.buscarTareaFechaVencimiento(LocalDate.parse(ftxtFechaVencimiento.getText()));
                break;
            case 5:
                miListaTarea = dTarea.buscarTareaPrioridad(cmbPrioridad.getSelectedItem().toString());
                break;
            case 6:
                miListaTarea = dTarea.buscarTareaFinalizada(finalizada());
                break;
            default:
                miListaTarea = new ArrayList<>();
                break;
        }

        if (miListaTarea != null && !miListaTarea.isEmpty()) {
            String datos[] = new String[8];
            for (Tarea tarea : miListaTarea) {
                datos[0] = tarea.getIdTarea();
                datos[1] = tarea.getNombreProyecto();
                datos[2] = tarea.getNombreTarea();
                datos[3] = tarea.getResponsableTarea();
                datos[4] = String.valueOf(tarea.getFechaDeVencimiento());
                datos[5] = tarea.getPrioridad();
                datos[6] = tarea.getFinalizadaTarea() ? "Sí" : "No";
                datos[7] = tarea.getComentario();
                model.addRow(datos);
            }
        } else {
            this.toBack();
            JOptionPane.showMessageDialog(null, "No se encontraron resultados.", "Búsqueda Avanzada", JOptionPane.INFORMATION_MESSAGE);
        }
        jtTarea.setModel(model);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void jtTareaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTareaMouseClicked
        int filaseleccionada;
        try {
            filaseleccionada = jtTarea.getSelectedRow();
            if (filaseleccionada == -1) {
                this.toBack();
                JOptionPane.showMessageDialog(null, "No se encuentra ninguna fila seleciconada",
                        "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String id = (String) jtTarea.getValueAt(filaseleccionada, 0);
                String proyecto = (String) jtTarea.getValueAt(filaseleccionada, 1);
                String nombre = (String) jtTarea.getValueAt(filaseleccionada, 2);
                String respon = (String) jtTarea.getValueAt(filaseleccionada, 3);
                String fechaFin = (String) jtTarea.getValueAt(filaseleccionada, 4);
                String prioridad = (String) jtTarea.getValueAt(filaseleccionada, 5);
                String fin = (String) jtTarea.getValueAt(filaseleccionada, 6);
                //Se llenan los campos con la fila seleccionada
                txtIdTarea.setText(id);
                cmbProyecto.setSelectedItem(proyecto);
                txtNombreTarea.setText(nombre);
                cmbResponsable.setSelectedItem(respon);
                ftxtFechaVencimiento.setText(fechaFin);
                cmbPrioridad.setSelectedItem(prioridad);
                cmbFinalizada.setSelectedItem(fin);
            }
        } catch (Exception e) {
            this.toBack();
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jtTareaMouseClicked

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnListaProyectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaProyectosActionPerformed
        DefaultTableModel model = (DefaultTableModel) jtTarea.getModel();
        model.setNumRows(0);

        GestTarea dTarea = new GestTarea();
        ArrayList<Tarea> miListaTarea = dTarea.todosTareas();

        if (!miListaTarea.isEmpty()) {
            String datos[] = new String[8];
            for (Tarea tarea : miListaTarea) {
                datos[0] = tarea.getIdTarea();
                datos[1] = tarea.getNombreProyecto();
                datos[2] = tarea.getNombreTarea();
                datos[3] = tarea.getResponsableTarea();
                datos[4] = String.valueOf(tarea.getFechaDeVencimiento());
                datos[5] = tarea.getPrioridad();
                datos[6] = tarea.getFinalizadaTarea() ? "Sí" : "No";
                datos[7] = tarea.getComentario();
                model.addRow(datos);
            }
        }
        jtTarea.setModel(model);
    }//GEN-LAST:event_btnListaProyectosActionPerformed

    private void btnMisProyectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMisProyectosActionPerformed
        cargarDatos();
    }//GEN-LAST:event_btnMisProyectosActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        frmMenuPrincipal menuPrincipal = new frmMenuPrincipal(this.usuario);
        this.dispose();
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComentarioActionPerformed
        String comentario = "";
        GestTarea gestTarea = new GestTarea();

        //Me traigo el comentario desde la BD
        Tarea tComent = (gestTarea.encontrarTareaId(txtIdTarea.getText()));
        if (tComent.getComentario() != null) {
            comentario = tComent.getComentario();
        }

        Tarea p = new Tarea(txtIdTarea.getText(),
                txtNombreTarea.getText(),
                cmbResponsable.getSelectedItem().toString(),
                LocalDate.parse(ftxtFechaVencimiento.getText()),
                cmbPrioridad.getSelectedItem().toString(),
                finalizada(),
                comentario,
                cmbProyecto.getSelectedItem().toString());

        frmComentario c = new frmComentario(this.usuario, p);
        c.setVisible(true);
        c.toFront();
        cargarDatos();
    }//GEN-LAST:event_btnComentarioActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        cargarDatos();
    }//GEN-LAST:event_formFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmGestTarea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmGestTarea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmGestTarea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmGestTarea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new frmGestTarea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnComentario;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnListaProyectos;
    private javax.swing.JButton btnMisProyectos;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbFinalizada;
    private javax.swing.JComboBox<String> cmbPrioridad;
    private javax.swing.JComboBox<String> cmbProyecto;
    private javax.swing.JComboBox<String> cmbResponsable;
    private javax.swing.JFormattedTextField ftxtFechaVencimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtTarea;
    private javax.swing.JTextField txtIdTarea;
    private javax.swing.JTextField txtNombreTarea;
    // End of variables declaration//GEN-END:variables
}
